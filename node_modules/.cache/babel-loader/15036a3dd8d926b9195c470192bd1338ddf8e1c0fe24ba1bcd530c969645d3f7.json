{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./users/index\";\nimport { authReducer } from \"./users/reducers\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\n// import { all, fork } from \"redux-saga/effects\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nfunction* rootSaga() {\n  // yield all([fork(productsWatcher)]);\n}\nconst rootReducer = combineReducers({\n  userReducer: authReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst sagaMiddleware = createSagaMiddleware();\nlet enhancer;\nif (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n  enhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(applyMiddleware(sagaMiddleware, thunk));\n} else {\n  enhancer = compose(applyMiddleware(sagaMiddleware, thunk));\n}\nexport const store = createStore(persistedReducer, enhancer);\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","thunk","reducers","authReducer","storage","persistStore","persistReducer","createSagaMiddleware","persistConfig","key","rootSaga","rootReducer","userReducer","persistedReducer","sagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run","persistor"],"sources":["C:/Projects/rakbank/src/redux/store.js"],"sourcesContent":["import {\r\n    createStore,\r\n    combineReducers,\r\n    applyMiddleware,\r\n    compose,\r\n} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./users/index\";\r\nimport { authReducer } from \"./users/reducers\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n} from \"redux-persist\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n// import { all, fork } from \"redux-saga/effects\";\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n};\r\n\r\nfunction* rootSaga() {\r\n    // yield all([fork(productsWatcher)]);\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    userReducer: authReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(\r\n    persistConfig,\r\n    rootReducer\r\n);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nlet enhancer;\r\nif (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\r\n    enhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(\r\n        applyMiddleware(sagaMiddleware, thunk)\r\n    );\r\n} else {\r\n    enhancer = compose(applyMiddleware(sagaMiddleware, thunk));\r\n}\r\n\r\nexport const store = createStore(\r\n    persistedReducer,\r\n    enhancer\r\n);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n"],"mappings":"AAAA,SACIA,WAAW,EACXC,eAAe,EACfC,eAAe,EACfC,OAAO,QACJ,OAAO;AACd,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,QAAQ,MAAM,eAAe;AACpC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SACIC,YAAY,EACZC,cAAc,QACX,eAAe;AACtB,OAAOC,oBAAoB,MAAM,YAAY;AAC7C;;AAEA,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXL;AACJ,CAAC;AAED,UAAUM,QAAQ,GAAG;EACjB;AAAA;AAGJ,MAAMC,WAAW,GAAGb,eAAe,CAAC;EAChCc,WAAW,EAAET;AACjB,CAAC,CAAC;AAEF,MAAMU,gBAAgB,GAAGP,cAAc,CACnCE,aAAa,EACbG,WAAW,CACd;AAED,MAAMG,cAAc,GAAGP,oBAAoB,EAAE;AAE7C,IAAIQ,QAAQ;AACZ,IAAIC,MAAM,CAACC,oCAAoC,EAAE;EAC7CF,QAAQ,GAAGC,MAAM,CAACC,oCAAoC,CAClDlB,eAAe,CAACe,cAAc,EAAEb,KAAK,CAAC,CACzC;AACL,CAAC,MAAM;EACHc,QAAQ,GAAGf,OAAO,CAACD,eAAe,CAACe,cAAc,EAAEb,KAAK,CAAC,CAAC;AAC9D;AAEA,OAAO,MAAMiB,KAAK,GAAGrB,WAAW,CAC5BgB,gBAAgB,EAChBE,QAAQ,CACX;AACDD,cAAc,CAACK,GAAG,CAACT,QAAQ,CAAC;AAE5B,OAAO,MAAMU,SAAS,GAAGf,YAAY,CAACa,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}